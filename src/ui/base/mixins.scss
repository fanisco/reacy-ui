@import 'variables';
@import 'functions';

// Base
@mixin box($size, $class) {
	height: nth($elementHeight, $size);
}
@mixin fonts($size, $class) {
	font-size: nth($fontSize, $size);
	font-family: $fontFamily;
	line-height: nth($lineHeight, $size);
}
@mixin sizes($size, $class) {
	padding: nth($spacingY, $size) nth($spacingX, $size);
}

// Sizes
@mixin btn-sizes($size, $class) {
	@include box($size, $class);
	@include sizes($size, $class);
	@include fonts($size, $class);
	&.#{$class}_rounded:not(.#{$class}_link) {
		padding-left: nth($spacingX, $size) * 2;
		padding-right: nth($spacingX, $size) * 2;
	}
}
@mixin input-sizes($size, $class) {
	@include sizes($size, $class);
	@include fonts($size, $class);
	height: nth($elementHeight, $size);
}
@mixin switch-sizes($size, $class) {
	$mod: 1.5;
	width: nth($elementHeight, $size) * 2 / $mod;
	height: nth($elementHeight, $size) / $mod;
	border-radius: nth($elementHeight, $size) / $mod;

	.#{$class}__trigger {
		width: nth($elementHeight, $size) / $mod - 4px;
		height: nth($elementHeight, $size) / $mod - 4px;
		transform: translateX(0);
	}
	&.#{$class}_active .#{$class}__trigger {
		transform: translateX(nth($elementHeight, $size) / $mod);
	}
}

// Styles
@mixin btn-styles($style, $class) {
	$colors: getColors($style);
	$linkColor: map-get($colors, linkColor);
	$textColor: map-get($colors, textColor);
	$idleColor: map-get($colors, idleColor);
	$gradientTop: $idleColor;
	$gradientBottom: map-get($colors, bottomColor);
	$borderColor: map-get($colors, borderColor);
	$borderHover: map-get($colors, borderHover);
	$hoverColor: map-get($colors, hoverColor);
	$activeColor: map-get($colors, activeColor);
	$borderActive: map-get($colors, borderActive);
	$shadowColor: map-get($colors, shadowColor);
	background: $idleColor linear-gradient(to bottom, $gradientTop, $gradientBottom);
	border-color: $borderColor;
	border-radius: $borderRadius;
	color: $textColor;

	&:hover {
		border-color: $borderHover;
		background-color: $hoverColor;
	}
	&.#{$class}_active, &:active:focus {
		background: $activeColor;
		border-color: $borderActive;
		box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.15),
					inset 0 0 10px rgba($shadowColor, 0.5);
	}
	&.#{$class}_link {
		color: $linkColor;

		&:hover {
			background: none;
			color: $linkColor;
			text-decoration: underline;
		}
		&:active:focus {
			background: none;
			box-shadow: none;
			color: $linkColor;
		}
	}
	&.#{$class}_outline {
		color: $linkColor;
		border: 1px solid $borderColor;

		&:hover {
			background: $hoverColor;
			border-color: $borderHover;
			color: $textColor;
		}
		&:active:focus {
			background: $activeColor;
			border-color: $borderColor;
			color: $textColor;
		}
	}
}
@mixin input-styles($style, $class) {
	$style: nth($styles, $style);
	$colors: map-get($palette, $style);
	background: $b100;
	border-color: $b300;
	border-radius: $borderRadius;
	color: $b900;

	&:hover {
		border-color: map-get($colors, a350);
	}
	&:focus {
		border-color: map-get($colors, a350);
		box-shadow: 0 5px 15px rgba(map-get($colors, a350), 0.3);
	}
}
@mixin switch-styles($style, $class) {
	$style: nth($styles, $style);
	$colors: map-get($palette, $style);
	background-color: $b200;
	box-shadow: inset 0.5px 0.5px 3px $b350;

	&:hover {
		background-color: $b100;
	}
	.#{$class}__trigger {
		background-color: white;
		box-shadow: 0.5px 0.5px 3px $b500;
	}

	&.#{$class}_active {
		background-color: map-get($colors, a350);
		box-shadow: inset 0.5px 0.5px 3px map-get($colors, a550);

		&:hover {
			background-color: map-get($colors, a250);
		}
	}
	&.#{$class}_active .#{$class}__trigger {
		box-shadow: 0.5px 0.5px 3px map-get($colors, a700);
	}
}
@mixin list-styles($style, $class) {
	@at-root .#{$class}__item {
		background-color: $b100;
		border-color: $b200;

		&:hover {
			background: $b150;
		}
	}
}
